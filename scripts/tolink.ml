let lib = "lib/pp_control.cmo lib/pp.cmo lib/compat.cmo lib/util.cmo lib/bignat.cmo lib/hashcons.cmo lib/dyn.cmo lib/system.cmo lib/options.cmo lib/bstack.cmo lib/edit.cmo lib/gset.cmo lib/gmap.cmo lib/tlm.cmo lib/gmapl.cmo lib/profile.cmo lib/explore.cmo lib/predicate.cmo lib/rtree.cmo lib/heap.cmo"
let kernel = "kernel/names.cmo kernel/univ.cmo kernel/esubst.cmo kernel/term.cmo kernel/sign.cmo kernel/declarations.cmo kernel/environ.cmo kernel/closure.cmo kernel/conv_oracle.cmo kernel/reduction.cmo kernel/entries.cmo kernel/modops.cmo kernel/type_errors.cmo kernel/inductive.cmo kernel/typeops.cmo kernel/indtypes.cmo kernel/cooking.cmo kernel/term_typing.cmo kernel/subtyping.cmo kernel/mod_typing.cmo kernel/safe_typing.cmo"
let library = "library/nameops.cmo library/libnames.cmo library/libobject.cmo library/summary.cmo library/nametab.cmo library/global.cmo library/lib.cmo library/declaremods.cmo library/library.cmo library/states.cmo library/decl_kinds.cmo library/dischargedhypsmap.cmo library/goptions.cmo "
let pretyping = "pretyping/termops.cmo pretyping/evd.cmo pretyping/instantiate.cmo pretyping/reductionops.cmo pretyping/inductiveops.cmo pretyping/rawterm.cmo pretyping/pattern.cmo pretyping/detyping.cmo pretyping/retyping.cmo pretyping/cbv.cmo pretyping/pretype_errors.cmo pretyping/typing.cmo pretyping/tacred.cmo pretyping/classops.cmo pretyping/recordops.cmo pretyping/indrec.cmo pretyping/evarutil.cmo pretyping/evarconv.cmo pretyping/coercion.cmo pretyping/cases.cmo pretyping/pretyping.cmo pretyping/matching.cmo"
let proofs = "proofs/tacexpr.cmo proofs/proof_type.cmo proofs/proof_trees.cmo proofs/logic.cmo proofs/refiner.cmo proofs/evar_refiner.cmo proofs/tacmach.cmo proofs/clenv.cmo proofs/pfedit.cmo proofs/tactic_debug.cmo"
let tactics = "tactics/dn.cmo tactics/termdn.cmo tactics/btermdn.cmo tactics/nbtermdn.cmo tactics/tacticals.cmo tactics/hipattern.cmo tactics/tactics.cmo tactics/hiddentac.cmo tactics/elim.cmo tactics/dhyp.cmo tactics/auto.cmo tactics/setoid_replace.cmo tactics/equality.cmo tactics/contradiction.cmo tactics/inv.cmo tactics/leminv.cmo tactics/tacinterp.cmo "
let interp = "parsing/lexer.cmo interp/topconstr.cmo interp/ppextend.cmo interp/symbols.cmo interp/genarg.cmo interp/syntax_def.cmo interp/reserve.cmo library/impargs.cmo interp/constrintern.cmo interp/modintern.cmo interp/constrextern.cmo interp/coqlib.cmo library/declare.cmo"
let parsing = "parsing/coqast.cmo parsing/ast.cmo parsing/termast.cmo parsing/extend.cmo parsing/esyntax.cmo parsing/pcoq.cmo parsing/egrammar.cmo parsing/ppconstr.cmo translate/ppconstrnew.cmo parsing/printer.cmo parsing/pptactic.cmo translate/pptacticnew.cmo parsing/printmod.cmo parsing/prettyp.cmo parsing/search.cmo"
let toplevel = "toplevel/himsg.cmo toplevel/cerrors.cmo toplevel/class.cmo toplevel/vernacexpr.cmo toplevel/metasyntax.cmo toplevel/command.cmo toplevel/record.cmo toplevel/recordobj.cmo toplevel/discharge.cmo translate/ppvernacnew.cmo toplevel/vernacinterp.cmo toplevel/mltop.cmo toplevel/vernacentries.cmo toplevel/vernac.cmo toplevel/line_oriented_parser.cmo toplevel/protectedtoplevel.cmo toplevel/toplevel.cmo toplevel/usage.cmo toplevel/coqinit.cmo toplevel/coqtop.cmo"
let highparsing = "parsing/g_prim.cmo parsing/g_proofs.cmo parsing/g_basevernac.cmo parsing/g_vernac.cmo parsing/g_tactic.cmo parsing/g_ltac.cmo parsing/g_constr.cmo parsing/g_cases.cmo parsing/g_module.cmo parsing/g_natsyntax.cmo parsing/g_zsyntax.cmo parsing/g_rsyntax.cmo"
let highparsingnew = "parsing/g_primnew.cmo parsing/g_constrnew.cmo parsing/g_tacticnew.cmo parsing/g_ltacnew.cmo parsing/g_vernacnew.cmo parsing/g_proofsnew.cmo"
let hightactics = "tactics/autorewrite.cmo tactics/refine.cmo tactics/extraargs.cmo tactics/extratactics.cmo tactics/eauto.cmo tactics/tauto.cmo tactics/eqdecide.cmo"
let contrib = "contrib/omega/omega.cmo contrib/omega/coq_omega.cmo contrib/omega/g_omega.cmo contrib/romega/omega2.cmo contrib/romega/const_omega.cmo contrib/romega/refl_omega.cmo contrib/romega/g_romega.cmo contrib/ring/quote.cmo contrib/ring/g_quote.cmo contrib/ring/ring.cmo contrib/ring/g_ring.cmo contrib/field/field.cmo contrib/fourier/fourier.cmo contrib/fourier/fourierR.cmo contrib/fourier/g_fourier.cmo contrib/extraction/table.cmo contrib/extraction/mlutil.cmo contrib/extraction/modutil.cmo contrib/extraction/ocaml.cmo contrib/extraction/haskell.cmo contrib/extraction/scheme.cmo contrib/extraction/extraction.cmo contrib/extraction/common.cmo contrib/extraction/extract_env.cmo contrib/extraction/g_extraction.cmo contrib/jprover/opname.cmo contrib/jprover/jterm.cmo contrib/jprover/jlogic.cmo contrib/jprover/jtunify.cmo contrib/jprover/jall.cmo contrib/jprover/jprover.cmo contrib/xml/unshare.cmo contrib/xml/xml.cmo contrib/xml/acic.cmo contrib/xml/doubleTypeInference.cmo contrib/xml/cic2acic.cmo contrib/xml/acic2Xml.cmo contrib/xml/proof2aproof.cmo contrib/xml/xmlcommand.cmo contrib/xml/proofTree2Xml.cmo contrib/xml/xmlentries.cmo contrib/cc/ccalgo.cmo contrib/cc/ccproof.cmo contrib/cc/cctac.cmo contrib/funind/tacinvutils.cmo contrib/funind/tacinv.cmo contrib/first-order/formula.cmo contrib/first-order/unify.cmo contrib/first-order/sequent.cmo contrib/first-order/rules.cmo contrib/first-order/instances.cmo contrib/first-order/ground.cmo contrib/first-order/g_ground.cmo"
let ide = "ide/utils/okey.cmo ide/utils/config_file.cmo ide/utils/configwin_keys.cmo ide/utils/configwin_types.cmo ide/utils/configwin_messages.cmo ide/utils/configwin_ihm.cmo ide/utils/configwin.cmo ide/utils/editable_cells.cmo ide/config_parser.cmo ide/config_lexer.cmo ide/utf8_convert.cmo ide/preferences.cmo ide/ideutils.cmo ide/blaster_window.cmo ide/undo.cmo ide/find_phrase.cmo ide/highlight.cmo ide/coq.cmo ide/coq_commands.cmo ide/coq_tactics.cmo ide/command_windows.cmo ide/coqide.cmo"
